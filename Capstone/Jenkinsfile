pipeline {
  agent any
  stages {
    stage('Linting') {
	  agent {
        docker {
            image 'hadolint/hadolint'
        }
      }
      steps {
	      sh 'pwd'
	      sh 'ls'
	      sh 'ls /var/lib/jenkins/workspace/Capstone@2/Capstone/Green'
	      sh 'ls /var/lib/jenkins/workspace/Capstone@2/Capstone/Green@tmp'
	      dir('/var/lib/jenkins/workspace/Capstone@2/Capstone/Green'){
        	sh 'hadolint Dockerfile'
	      }
	      dir('/var/lib/jenkins/workspace/Capstone@2/Capstone/Blue'){
		sh 'hadolint Dockerfile'
	      }
        }
     }
    stage('Build blue') {
      steps{
	      dir('/var/lib/jenkins/workspace/Capstone@2/Capstone/Blue'){
        	sh 'docker build --tag=blue .'
	      }
      }
    }
	stage('Push blue') {
	  steps{
	    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD']]){  
		sh '''
          docker push hatwithpins/blue:latest
        '''    
	   }
	  }
	}
	stage('Set current kubectl context') {
	  steps{
	    sh 'kubectl config use-context arn:aws:eks:us-west-2:013193330021:cluster/Udacity'
	  }
	}
	stage('Deploy blue container') {
	 steps{
	   sh 'kubectl apply -f ./blue-controller.json'
	 }
   }
   stage('Build green') {
      steps{
	      dir('/var/lib/jenkins/workspace/Capstone@2/Capstone/Green'){
        	sh 'docker build --tag=green .'
	      }
      }
    }
	stage('Push green') {
	  steps{
	    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD']]){  
		sh '''
          docker push hatwithpins/green:latest
        '''    
	   }
	  }
	}
	stage('Deploy green container') {
	 steps{
	   sh 'kubectl apply -f ./green-controller.json'
	 }
   }
    stage('Deploy load balancer') {
	  steps{
		  dir('/var/lib/jenkins/workspace/Capstone@2/Capstone/'){
	    		sh 'kubectl apply -f ./blue-green-service.json'
		  }
	  }
	}
}
}
